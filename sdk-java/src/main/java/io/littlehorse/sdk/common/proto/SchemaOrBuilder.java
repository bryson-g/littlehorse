// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable.proto

package io.littlehorse.sdk.common.proto;

public interface SchemaOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.Schema)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The id of the `Schema`. This includes the version.
   * </pre>
   *
   * <code>.littlehorse.SchemaId id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * The id of the `Schema`. This includes the version.
   * </pre>
   *
   * <code>.littlehorse.SchemaId id = 1;</code>
   * @return The id.
   */
  io.littlehorse.sdk.common.proto.SchemaId getId();
  /**
   * <pre>
   * The id of the `Schema`. This includes the version.
   * </pre>
   *
   * <code>.littlehorse.SchemaId id = 1;</code>
   */
  io.littlehorse.sdk.common.proto.SchemaIdOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Optionally description of the schema.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return Whether the description field is set.
   */
  boolean hasDescription();
  /**
   * <pre>
   * Optionally description of the schema.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Optionally description of the schema.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * The `InlineSchema` defines the actual structure of any `Struct` using this `Schema`.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema schema = 3;</code>
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   * <pre>
   * The `InlineSchema` defines the actual structure of any `Struct` using this `Schema`.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema schema = 3;</code>
   * @return The schema.
   */
  io.littlehorse.sdk.common.proto.InlineSchema getSchema();
  /**
   * <pre>
   * The `InlineSchema` defines the actual structure of any `Struct` using this `Schema`.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema schema = 3;</code>
   */
  io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder getSchemaOrBuilder();
}
