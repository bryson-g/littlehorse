// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * A `SchemaField` defines a field inside a `Schema`.
 * </pre>
 *
 * Protobuf type {@code littlehorse.SchemaField}
 */
public final class SchemaField extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.SchemaField)
    SchemaFieldOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SchemaField.newBuilder() to construct.
  private SchemaField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SchemaField() {
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SchemaField();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.VariableOuterClass.internal_static_littlehorse_SchemaField_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.VariableOuterClass.internal_static_littlehorse_SchemaField_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.SchemaField.class, io.littlehorse.sdk.common.proto.SchemaField.Builder.class);
  }

  private int fieldTypeCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object fieldType_;
  public enum FieldTypeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PRIMITIVE(3),
    SCHEMA_ID(4),
    INLINE_SCHEMA(5),
    FIELDTYPE_NOT_SET(0);
    private final int value;
    private FieldTypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FieldTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static FieldTypeCase forNumber(int value) {
      switch (value) {
        case 3: return PRIMITIVE;
        case 4: return SCHEMA_ID;
        case 5: return INLINE_SCHEMA;
        case 0: return FIELDTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public FieldTypeCase
  getFieldTypeCase() {
    return FieldTypeCase.forNumber(
        fieldTypeCase_);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the field.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the field.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPTIONAL_FIELD_NUMBER = 2;
  private boolean optional_ = false;
  /**
   * <pre>
   * Whether the field is optional.
   * </pre>
   *
   * <code>bool optional = 2;</code>
   * @return The optional.
   */
  @java.lang.Override
  public boolean getOptional() {
    return optional_;
  }

  public static final int PRIMITIVE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return Whether the primitive field is set.
   */
  public boolean hasPrimitive() {
    return fieldTypeCase_ == 3;
  }
  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return The enum numeric value on the wire for primitive.
   */
  public int getPrimitiveValue() {
    if (fieldTypeCase_ == 3) {
      return (java.lang.Integer) fieldType_;
    }
    return 0;
  }
  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return The primitive.
   */
  public io.littlehorse.sdk.common.proto.PrimitiveType getPrimitive() {
    if (fieldTypeCase_ == 3) {
      io.littlehorse.sdk.common.proto.PrimitiveType result = io.littlehorse.sdk.common.proto.PrimitiveType.forNumber(
          (java.lang.Integer) fieldType_);
      return result == null ? io.littlehorse.sdk.common.proto.PrimitiveType.UNRECOGNIZED : result;
    }
    return io.littlehorse.sdk.common.proto.PrimitiveType.JSON_OBJ;
  }

  public static final int SCHEMA_ID_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   * @return Whether the schemaId field is set.
   */
  @java.lang.Override
  public boolean hasSchemaId() {
    return fieldTypeCase_ == 4;
  }
  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   * @return The schemaId.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.SchemaId getSchemaId() {
    if (fieldTypeCase_ == 4) {
       return (io.littlehorse.sdk.common.proto.SchemaId) fieldType_;
    }
    return io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
  }
  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.SchemaIdOrBuilder getSchemaIdOrBuilder() {
    if (fieldTypeCase_ == 4) {
       return (io.littlehorse.sdk.common.proto.SchemaId) fieldType_;
    }
    return io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
  }

  public static final int INLINE_SCHEMA_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   * @return Whether the inlineSchema field is set.
   */
  @java.lang.Override
  public boolean hasInlineSchema() {
    return fieldTypeCase_ == 5;
  }
  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   * @return The inlineSchema.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.InlineSchema getInlineSchema() {
    if (fieldTypeCase_ == 5) {
       return (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_;
    }
    return io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
  }
  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder getInlineSchemaOrBuilder() {
    if (fieldTypeCase_ == 5) {
       return (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_;
    }
    return io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (optional_ != false) {
      output.writeBool(2, optional_);
    }
    if (fieldTypeCase_ == 3) {
      output.writeEnum(3, ((java.lang.Integer) fieldType_));
    }
    if (fieldTypeCase_ == 4) {
      output.writeMessage(4, (io.littlehorse.sdk.common.proto.SchemaId) fieldType_);
    }
    if (fieldTypeCase_ == 5) {
      output.writeMessage(5, (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (optional_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, optional_);
    }
    if (fieldTypeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, ((java.lang.Integer) fieldType_));
    }
    if (fieldTypeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (io.littlehorse.sdk.common.proto.SchemaId) fieldType_);
    }
    if (fieldTypeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.SchemaField)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.SchemaField other = (io.littlehorse.sdk.common.proto.SchemaField) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (getOptional()
        != other.getOptional()) return false;
    if (!getFieldTypeCase().equals(other.getFieldTypeCase())) return false;
    switch (fieldTypeCase_) {
      case 3:
        if (getPrimitiveValue()
            != other.getPrimitiveValue()) return false;
        break;
      case 4:
        if (!getSchemaId()
            .equals(other.getSchemaId())) return false;
        break;
      case 5:
        if (!getInlineSchema()
            .equals(other.getInlineSchema())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + OPTIONAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOptional());
    switch (fieldTypeCase_) {
      case 3:
        hash = (37 * hash) + PRIMITIVE_FIELD_NUMBER;
        hash = (53 * hash) + getPrimitiveValue();
        break;
      case 4:
        hash = (37 * hash) + SCHEMA_ID_FIELD_NUMBER;
        hash = (53 * hash) + getSchemaId().hashCode();
        break;
      case 5:
        hash = (37 * hash) + INLINE_SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getInlineSchema().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.SchemaField parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.SchemaField parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.SchemaField parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.SchemaField prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A `SchemaField` defines a field inside a `Schema`.
   * </pre>
   *
   * Protobuf type {@code littlehorse.SchemaField}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.SchemaField)
      io.littlehorse.sdk.common.proto.SchemaFieldOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.VariableOuterClass.internal_static_littlehorse_SchemaField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.VariableOuterClass.internal_static_littlehorse_SchemaField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.SchemaField.class, io.littlehorse.sdk.common.proto.SchemaField.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.SchemaField.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      optional_ = false;
      if (schemaIdBuilder_ != null) {
        schemaIdBuilder_.clear();
      }
      if (inlineSchemaBuilder_ != null) {
        inlineSchemaBuilder_.clear();
      }
      fieldTypeCase_ = 0;
      fieldType_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.VariableOuterClass.internal_static_littlehorse_SchemaField_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SchemaField getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.SchemaField.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SchemaField build() {
      io.littlehorse.sdk.common.proto.SchemaField result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SchemaField buildPartial() {
      io.littlehorse.sdk.common.proto.SchemaField result = new io.littlehorse.sdk.common.proto.SchemaField(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.SchemaField result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.optional_ = optional_;
      }
    }

    private void buildPartialOneofs(io.littlehorse.sdk.common.proto.SchemaField result) {
      result.fieldTypeCase_ = fieldTypeCase_;
      result.fieldType_ = this.fieldType_;
      if (fieldTypeCase_ == 4 &&
          schemaIdBuilder_ != null) {
        result.fieldType_ = schemaIdBuilder_.build();
      }
      if (fieldTypeCase_ == 5 &&
          inlineSchemaBuilder_ != null) {
        result.fieldType_ = inlineSchemaBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.SchemaField) {
        return mergeFrom((io.littlehorse.sdk.common.proto.SchemaField)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.SchemaField other) {
      if (other == io.littlehorse.sdk.common.proto.SchemaField.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getOptional() != false) {
        setOptional(other.getOptional());
      }
      switch (other.getFieldTypeCase()) {
        case PRIMITIVE: {
          setPrimitiveValue(other.getPrimitiveValue());
          break;
        }
        case SCHEMA_ID: {
          mergeSchemaId(other.getSchemaId());
          break;
        }
        case INLINE_SCHEMA: {
          mergeInlineSchema(other.getInlineSchema());
          break;
        }
        case FIELDTYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              optional_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              int rawValue = input.readEnum();
              fieldTypeCase_ = 3;
              fieldType_ = rawValue;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getSchemaIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              fieldTypeCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getInlineSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);
              fieldTypeCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int fieldTypeCase_ = 0;
    private java.lang.Object fieldType_;
    public FieldTypeCase
        getFieldTypeCase() {
      return FieldTypeCase.forNumber(
          fieldTypeCase_);
    }

    public Builder clearFieldType() {
      fieldTypeCase_ = 0;
      fieldType_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the field.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private boolean optional_ ;
    /**
     * <pre>
     * Whether the field is optional.
     * </pre>
     *
     * <code>bool optional = 2;</code>
     * @return The optional.
     */
    @java.lang.Override
    public boolean getOptional() {
      return optional_;
    }
    /**
     * <pre>
     * Whether the field is optional.
     * </pre>
     *
     * <code>bool optional = 2;</code>
     * @param value The optional to set.
     * @return This builder for chaining.
     */
    public Builder setOptional(boolean value) {

      optional_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the field is optional.
     * </pre>
     *
     * <code>bool optional = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOptional() {
      bitField0_ = (bitField0_ & ~0x00000002);
      optional_ = false;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @return Whether the primitive field is set.
     */
    @java.lang.Override
    public boolean hasPrimitive() {
      return fieldTypeCase_ == 3;
    }
    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @return The enum numeric value on the wire for primitive.
     */
    @java.lang.Override
    public int getPrimitiveValue() {
      if (fieldTypeCase_ == 3) {
        return ((java.lang.Integer) fieldType_).intValue();
      }
      return 0;
    }
    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @param value The enum numeric value on the wire for primitive to set.
     * @return This builder for chaining.
     */
    public Builder setPrimitiveValue(int value) {
      fieldTypeCase_ = 3;
      fieldType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @return The primitive.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PrimitiveType getPrimitive() {
      if (fieldTypeCase_ == 3) {
        io.littlehorse.sdk.common.proto.PrimitiveType result = io.littlehorse.sdk.common.proto.PrimitiveType.forNumber(
            (java.lang.Integer) fieldType_);
        return result == null ? io.littlehorse.sdk.common.proto.PrimitiveType.UNRECOGNIZED : result;
      }
      return io.littlehorse.sdk.common.proto.PrimitiveType.JSON_OBJ;
    }
    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @param value The primitive to set.
     * @return This builder for chaining.
     */
    public Builder setPrimitive(io.littlehorse.sdk.common.proto.PrimitiveType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      fieldTypeCase_ = 3;
      fieldType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is a primitive `VariableValue` of the specified type.
     * </pre>
     *
     * <code>.littlehorse.PrimitiveType primitive = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrimitive() {
      if (fieldTypeCase_ == 3) {
        fieldTypeCase_ = 0;
        fieldType_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.SchemaId, io.littlehorse.sdk.common.proto.SchemaId.Builder, io.littlehorse.sdk.common.proto.SchemaIdOrBuilder> schemaIdBuilder_;
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     * @return Whether the schemaId field is set.
     */
    @java.lang.Override
    public boolean hasSchemaId() {
      return fieldTypeCase_ == 4;
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     * @return The schemaId.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SchemaId getSchemaId() {
      if (schemaIdBuilder_ == null) {
        if (fieldTypeCase_ == 4) {
          return (io.littlehorse.sdk.common.proto.SchemaId) fieldType_;
        }
        return io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
      } else {
        if (fieldTypeCase_ == 4) {
          return schemaIdBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    public Builder setSchemaId(io.littlehorse.sdk.common.proto.SchemaId value) {
      if (schemaIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fieldType_ = value;
        onChanged();
      } else {
        schemaIdBuilder_.setMessage(value);
      }
      fieldTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    public Builder setSchemaId(
        io.littlehorse.sdk.common.proto.SchemaId.Builder builderForValue) {
      if (schemaIdBuilder_ == null) {
        fieldType_ = builderForValue.build();
        onChanged();
      } else {
        schemaIdBuilder_.setMessage(builderForValue.build());
      }
      fieldTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    public Builder mergeSchemaId(io.littlehorse.sdk.common.proto.SchemaId value) {
      if (schemaIdBuilder_ == null) {
        if (fieldTypeCase_ == 4 &&
            fieldType_ != io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance()) {
          fieldType_ = io.littlehorse.sdk.common.proto.SchemaId.newBuilder((io.littlehorse.sdk.common.proto.SchemaId) fieldType_)
              .mergeFrom(value).buildPartial();
        } else {
          fieldType_ = value;
        }
        onChanged();
      } else {
        if (fieldTypeCase_ == 4) {
          schemaIdBuilder_.mergeFrom(value);
        } else {
          schemaIdBuilder_.setMessage(value);
        }
      }
      fieldTypeCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    public Builder clearSchemaId() {
      if (schemaIdBuilder_ == null) {
        if (fieldTypeCase_ == 4) {
          fieldTypeCase_ = 0;
          fieldType_ = null;
          onChanged();
        }
      } else {
        if (fieldTypeCase_ == 4) {
          fieldTypeCase_ = 0;
          fieldType_ = null;
        }
        schemaIdBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.SchemaId.Builder getSchemaIdBuilder() {
      return getSchemaIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SchemaIdOrBuilder getSchemaIdOrBuilder() {
      if ((fieldTypeCase_ == 4) && (schemaIdBuilder_ != null)) {
        return schemaIdBuilder_.getMessageOrBuilder();
      } else {
        if (fieldTypeCase_ == 4) {
          return (io.littlehorse.sdk.common.proto.SchemaId) fieldType_;
        }
        return io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies that the field is of a specific `Schema`.
     * </pre>
     *
     * <code>.littlehorse.SchemaId schema_id = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.SchemaId, io.littlehorse.sdk.common.proto.SchemaId.Builder, io.littlehorse.sdk.common.proto.SchemaIdOrBuilder> 
        getSchemaIdFieldBuilder() {
      if (schemaIdBuilder_ == null) {
        if (!(fieldTypeCase_ == 4)) {
          fieldType_ = io.littlehorse.sdk.common.proto.SchemaId.getDefaultInstance();
        }
        schemaIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.SchemaId, io.littlehorse.sdk.common.proto.SchemaId.Builder, io.littlehorse.sdk.common.proto.SchemaIdOrBuilder>(
                (io.littlehorse.sdk.common.proto.SchemaId) fieldType_,
                getParentForChildren(),
                isClean());
        fieldType_ = null;
      }
      fieldTypeCase_ = 4;
      onChanged();
      return schemaIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.InlineSchema, io.littlehorse.sdk.common.proto.InlineSchema.Builder, io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder> inlineSchemaBuilder_;
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     * @return Whether the inlineSchema field is set.
     */
    @java.lang.Override
    public boolean hasInlineSchema() {
      return fieldTypeCase_ == 5;
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     * @return The inlineSchema.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.InlineSchema getInlineSchema() {
      if (inlineSchemaBuilder_ == null) {
        if (fieldTypeCase_ == 5) {
          return (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_;
        }
        return io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
      } else {
        if (fieldTypeCase_ == 5) {
          return inlineSchemaBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    public Builder setInlineSchema(io.littlehorse.sdk.common.proto.InlineSchema value) {
      if (inlineSchemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fieldType_ = value;
        onChanged();
      } else {
        inlineSchemaBuilder_.setMessage(value);
      }
      fieldTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    public Builder setInlineSchema(
        io.littlehorse.sdk.common.proto.InlineSchema.Builder builderForValue) {
      if (inlineSchemaBuilder_ == null) {
        fieldType_ = builderForValue.build();
        onChanged();
      } else {
        inlineSchemaBuilder_.setMessage(builderForValue.build());
      }
      fieldTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    public Builder mergeInlineSchema(io.littlehorse.sdk.common.proto.InlineSchema value) {
      if (inlineSchemaBuilder_ == null) {
        if (fieldTypeCase_ == 5 &&
            fieldType_ != io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance()) {
          fieldType_ = io.littlehorse.sdk.common.proto.InlineSchema.newBuilder((io.littlehorse.sdk.common.proto.InlineSchema) fieldType_)
              .mergeFrom(value).buildPartial();
        } else {
          fieldType_ = value;
        }
        onChanged();
      } else {
        if (fieldTypeCase_ == 5) {
          inlineSchemaBuilder_.mergeFrom(value);
        } else {
          inlineSchemaBuilder_.setMessage(value);
        }
      }
      fieldTypeCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    public Builder clearInlineSchema() {
      if (inlineSchemaBuilder_ == null) {
        if (fieldTypeCase_ == 5) {
          fieldTypeCase_ = 0;
          fieldType_ = null;
          onChanged();
        }
      } else {
        if (fieldTypeCase_ == 5) {
          fieldTypeCase_ = 0;
          fieldType_ = null;
        }
        inlineSchemaBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    public io.littlehorse.sdk.common.proto.InlineSchema.Builder getInlineSchemaBuilder() {
      return getInlineSchemaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder getInlineSchemaOrBuilder() {
      if ((fieldTypeCase_ == 5) && (inlineSchemaBuilder_ != null)) {
        return inlineSchemaBuilder_.getMessageOrBuilder();
      } else {
        if (fieldTypeCase_ == 5) {
          return (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_;
        }
        return io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies that field must be a `Struct` conforming to the accompanying schema.
     * </pre>
     *
     * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.InlineSchema, io.littlehorse.sdk.common.proto.InlineSchema.Builder, io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder> 
        getInlineSchemaFieldBuilder() {
      if (inlineSchemaBuilder_ == null) {
        if (!(fieldTypeCase_ == 5)) {
          fieldType_ = io.littlehorse.sdk.common.proto.InlineSchema.getDefaultInstance();
        }
        inlineSchemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.InlineSchema, io.littlehorse.sdk.common.proto.InlineSchema.Builder, io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder>(
                (io.littlehorse.sdk.common.proto.InlineSchema) fieldType_,
                getParentForChildren(),
                isClean());
        fieldType_ = null;
      }
      fieldTypeCase_ = 5;
      onChanged();
      return inlineSchemaBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.SchemaField)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.SchemaField)
  private static final io.littlehorse.sdk.common.proto.SchemaField DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.SchemaField();
  }

  public static io.littlehorse.sdk.common.proto.SchemaField getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SchemaField>
      PARSER = new com.google.protobuf.AbstractParser<SchemaField>() {
    @java.lang.Override
    public SchemaField parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SchemaField> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SchemaField> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.SchemaField getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

