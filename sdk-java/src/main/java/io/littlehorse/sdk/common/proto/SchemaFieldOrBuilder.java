// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable.proto

package io.littlehorse.sdk.common.proto;

public interface SchemaFieldOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.SchemaField)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the field.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the field.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Whether the field is optional.
   * </pre>
   *
   * <code>bool optional = 2;</code>
   * @return The optional.
   */
  boolean getOptional();

  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return Whether the primitive field is set.
   */
  boolean hasPrimitive();
  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return The enum numeric value on the wire for primitive.
   */
  int getPrimitiveValue();
  /**
   * <pre>
   * Specifies that the field is a primitive `VariableValue` of the specified type.
   * </pre>
   *
   * <code>.littlehorse.PrimitiveType primitive = 3;</code>
   * @return The primitive.
   */
  io.littlehorse.sdk.common.proto.PrimitiveType getPrimitive();

  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   * @return Whether the schemaId field is set.
   */
  boolean hasSchemaId();
  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   * @return The schemaId.
   */
  io.littlehorse.sdk.common.proto.SchemaId getSchemaId();
  /**
   * <pre>
   * Specifies that the field is of a specific `Schema`.
   * </pre>
   *
   * <code>.littlehorse.SchemaId schema_id = 4;</code>
   */
  io.littlehorse.sdk.common.proto.SchemaIdOrBuilder getSchemaIdOrBuilder();

  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   * @return Whether the inlineSchema field is set.
   */
  boolean hasInlineSchema();
  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   * @return The inlineSchema.
   */
  io.littlehorse.sdk.common.proto.InlineSchema getInlineSchema();
  /**
   * <pre>
   * Specifies that field must be a `Struct` conforming to the accompanying schema.
   * </pre>
   *
   * <code>.littlehorse.InlineSchema inline_schema = 5;</code>
   */
  io.littlehorse.sdk.common.proto.InlineSchemaOrBuilder getInlineSchemaOrBuilder();

  io.littlehorse.sdk.common.proto.SchemaField.FieldTypeCase getFieldTypeCase();
}
