"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[9615],{7100:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(4848),o=n(8453);const s={slug:"transactional-outbox",authors:["coltmcnealy"],tags:["analysis","integration-patterns","littlehorse"]},r="Integration Patterns: Transactional Outbox",i={permalink:"/blog/transactional-outbox",source:"@site/blog/2024-09-30-transactional-outbox.md",title:"Integration Patterns: Transactional Outbox",description:"Like the Saga Pattern, the Transactional Outbox pattern is tool for defending against data loss in your applications. In this blog we cover how it works and how to do it easier using LittleHorse.",date:"2024-09-30T00:00:00.000Z",tags:[{inline:!1,label:"Technical Analysis",permalink:"/blog/tags/analysis/",description:"Analysis of the current and future state of Technical Architecture."},{inline:!1,label:"Integration Patterns",permalink:"/blog/tags/integration-patterns/",description:"A 5-part blog series on Integration Patterns that are useful for event-driven systems."},{inline:!1,label:"LittleHorse Orchestrator",permalink:"/blog/tags/littlehorse/",description:"Information about the LittleHorse Orchestrator."}],readingTime:5.74,hasTruncateMarker:!0,authors:[{name:"Colt McNealy",title:"Managing Member of the LLC",description:"Colt is the founder of LittleHorse Enterprises and the original author of the LittleHorse Orchestrator. He's a passionate Apache Kafka fan and loves hockey, golf, piano, cooking, and Taekwondo.",page:{permalink:"/blog/authors/coltmcnealy"},socials:{github:"https://github.com/coltmcnealy-lh",linkedin:"https://www.linkedin.com/in/colt-mcnealy-900b7a148/",x:"https://x.com/coltmcnealy"},imageURL:"https://avatars.githubusercontent.com/u/100447728",key:"coltmcnealy"}],frontMatter:{slug:"transactional-outbox",authors:["coltmcnealy"],tags:["analysis","integration-patterns","littlehorse"]},unlisted:!1,nextItem:{title:"Integration Patterns: Saga Transactions",permalink:"/blog/saga-pattern"}},l={authorsImageUrls:[void 0]},c=[];function u(t){const e={a:"a",em:"em",p:"p",...(0,o.R)(),...t.components};return(0,a.jsxs)(e.p,{children:["Like the ",(0,a.jsx)(e.a,{href:"/blog/saga-pattern",children:"Saga Pattern"}),", the Transactional Outbox pattern is tool for defending against data loss in your applications. In this blog we cover how it works and how to do it ",(0,a.jsx)(e.em,{children:"easier"})," using LittleHorse."]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>i});var a=n(6540);const o={},s=a.createContext(o);function r(t){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),a.createElement(s.Provider,{value:e},t.children)}}}]);