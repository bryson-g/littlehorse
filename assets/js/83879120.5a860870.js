"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[7439],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>T});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),i=n(6550),u=n(1980),s=n(7392),p=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function c(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=c(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[u,s]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),b=(()=>{const e=u??d;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),f(e)}),[s,f,l]),tabValues:l}}var b=n(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,n=p.indexOf(t),a=s[n].value;a!==i&&(d(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:c},o,{className:(0,l.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",v.tabList)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function T(e){const t=(0,b.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},8631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={},u="Interrupts",s={unversionedId:"developer-guide/wfspec-development/interrupts",id:"developer-guide/wfspec-development/interrupts",title:"Interrupts",description:"As per the Concepts Docs, you can set up a ThreadSpec such that when an ExternalEvent of a certain type comes in, the ThreadRun is interrupted and an Interrupt Handler ThreadRun is spawned.",source:"@site/docs/05-developer-guide/08-wfspec-development/05-interrupts.md",sourceDirName:"05-developer-guide/08-wfspec-development",slug:"/developer-guide/wfspec-development/interrupts",permalink:"/littlehorse/docs/developer-guide/wfspec-development/interrupts",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"External Events",permalink:"/littlehorse/docs/developer-guide/wfspec-development/external-events"},next:{title:"Exception Handling",permalink:"/littlehorse/docs/developer-guide/wfspec-development/exception-handling"}},p={},d=[{value:"Example",id:"example",level:2},{value:"Variable Scoping",id:"variable-scoping",level:3},{value:"Accessing the Event Content",id:"accessing-the-event-content",level:3},{value:"Putting it Together",id:"putting-it-together",level:3},{value:"Notes and Best Practices",id:"notes-and-best-practices",level:2}],c={toc:d},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interrupts"},"Interrupts"),(0,r.kt)("p",null,"As per the ",(0,r.kt)("a",{parentName:"p",href:"/littlehorse/docs/concepts/interrupts"},"Concepts Docs"),", you can set up a ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadSpec")," such that when an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," of a certain type comes in, the ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is interrupted and an Interrupt Handler ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is spawned."),(0,r.kt)("p",null,"To do so, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"WorkflowThread#handleInterrupt()"),". There are two required arguments:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The name of the ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalEventDef"),"."),(0,r.kt)("li",{parentName:"ol"},"A lambda function, interface, or ",(0,r.kt)("inlineCode",{parentName:"li"},"ThreadFunc")," defining the handler thread (generally, this is a lambda function).")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"In this example, we have a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfSpec")," that defines a long-running ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun")," that uses an email address (stored as a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRunVariable"),") to communicate with a customer."),(0,r.kt)("p",null,"What if the customer changes their contact info? Let's define an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," named ",(0,r.kt)("inlineCode",{parentName:"p"},"email-update")," whose content is a ",(0,r.kt)("inlineCode",{parentName:"p"},"STR")," value with the new email address. We will use that ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," and an Interrupt to update the ",(0,r.kt)("inlineCode",{parentName:"p"},"Variable")," used to contact the customer."),(0,r.kt)("h3",{id:"variable-scoping"},"Variable Scoping"),(0,r.kt)("p",null,"Recall that the interrupt handler is a Child ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," of the Interrupted ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun"),", which means that it has read and write access to the Interrupted thread's ",(0,r.kt)("inlineCode",{parentName:"p"},"Variable"),"s."),(0,r.kt)("h3",{id:"accessing-the-event-content"},"Accessing the Event Content"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent"),"s have a payload. When you create your Handler ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadSpec"),", you can access that content by creating a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRunVariable")," with the name ",(0,r.kt)("inlineCode",{parentName:"p"},'"INPUT"'),". For example, if the payload of your ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," will be a ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON_OBJ"),", you would do:"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"thread.addVariable(WorkflowThread.HANDLER_INPUT, VariableType.JSON_OBJ);\n"))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'thread.AddVariable("INPUT", model.VariableType_JSON_OBJ)\n'))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'thread.add_variable("INPUT",VariableType.JSON_OBJ)\n')))),(0,r.kt)("h3",{id:"putting-it-together"},"Putting it Together"),(0,r.kt)("p",null,"Here's a complete example:"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public void threadFunction(WorkflowThread thread) {\n\n    // The Variable used to keep track of email in the parent thread.\n    WfRunVariable email = thread.addVariable("customer-email", VariableType.STR);\n\n    // Register the Interrupt Handler\n    thread.registerInterruptHandler(\n        "email-update",\n        handler -> {\n            // Store the content of the event\n            WfRunVariable eventContent = thread.addVariable(\n                WorkflowThread.HANDLER_INPUT_VAR,\n                VariableType.STR\n            );\n\n            // Mutate the variable\n            handler.mutate(email, VariableMutationType.ASSIGN, eventContent);\n        }\n    )\n\n    // Omitted: your long-running business logic that uses the `customer-email` variable\n}\n'))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func threadFunction(thread *wflib.WorkflowThread) {\n\n    // The Variable used to keep track of email in the parent thread.\n    email := thread.AddVariable("customer-email", model.VariableType_STR)\n  \n    // Register the Interrupt Handler\n    thread.HandleInterrupt(\n        "email-update",\n        func (handler *wflib.WorkflowThread) {\n            // Store the content of the event\n            eventContent := handler.AddVariable(\n                "INPUT", // the special name to get interrupt trigger\n                model.VariableType_STR,\n            )\n  \n            // Mutate the variable\n            handler.Mutate(email, model.VariableMutationType_ASSIGN, eventContent)\n        },\n    )\n  \n    // Omitted: your long-running business logic that uses the `customer-email` variable\n}\n'))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def my_interrupt_handler(handler: WorkflowThread) -> None:\n    # Get variable from parent thread\n    email = handler.find_variable("customer-email")\n\n    # Store the content of the event\n    event_content = handler.add_variable("INPUT", VariableType.STR)\n    \n    # Mutate the variable\n    handler.mutate(email, VariableMutationType.ASSIGN, event_content)\n\ndef my_entrypoint(wf: WorkflowThread) -> None:\n    # The Variable used to keep track of email in the parent thread.\n    thread.add_variable("customer-email", VariableType.STR)\n\n    # Register the Interrupt Handler\n    wf.add_interrupt_handler("email-update", my_interrupt_handler)\n')))),(0,r.kt)("h2",{id:"notes-and-best-practices"},"Notes and Best Practices"),(0,r.kt)("p",null,"First, only one ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadSpec")," may register an Interrupt Handler for a single ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef"),"."),(0,r.kt)("p",null,"Additionally, note (as per the Concept Docs) that the Interrupt Handler Thread is a Child of the Interrupted ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," and as such can mutate the parent's Variables. This is a very useful feature."))}h.isMDXComponent=!0}}]);