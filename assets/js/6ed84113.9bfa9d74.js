"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[8738],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||r;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),i=n(6010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),i=n(7294),r=n(6010),l=n(2466),o=n(6550),s=n(1980),u=n(7392),c=n(12);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function f(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=f(e),[l,o]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,u]=m({queryString:n,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=s??p;return d({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,r]),tabValues:r}}var g=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function C(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),f=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(p(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":f(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:f},l,{className:(0,r.Z)("tabs__item",k.tabItem,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=h(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",k.tabList)},i.createElement(C,(0,a.Z)({},e,t)),i.createElement(b,(0,a.Z)({},e,t)))}function v(e){const t=(0,g.Z)();return i.createElement(N,(0,a.Z)({key:String(t)},e))}},5835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),r=n(4866),l=n(5162);const o={},s="Configuring the Clients",u={unversionedId:"developer-guide/client-configuration",id:"developer-guide/client-configuration",title:"Configuring the Clients",description:"In every LittleHorse SDK, there is an LHConfig class or struct that handles the configuration required for allowing your clients and Task Workers to talk to LittleHorse Server.",source:"@site/docs/05-developer-guide/02-client-configuration.md",sourceDirName:"05-developer-guide",slug:"/developer-guide/client-configuration",permalink:"/littlehorse/docs/developer-guide/client-configuration",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Quickstart Installation",permalink:"/littlehorse/docs/developer-guide/install"},next:{title:"LittleHorse CLI",permalink:"/littlehorse/docs/developer-guide/lhctl"}},c={},p=[{value:"Creating the <code>LHConfig</code>",id:"creating-the-lhconfig",level:2},{value:"Client Config Options",id:"client-config-options",level:2},{value:"Configuring the CLI",id:"configuring-the-cli",level:2},{value:"Getting a GRPC Client",id:"getting-a-grpc-client",level:2}],f={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuring-the-clients"},"Configuring the Clients"),(0,i.kt)("p",null,"In every LittleHorse SDK, there is an ",(0,i.kt)("inlineCode",{parentName:"p"},"LHConfig")," class or struct that handles the configuration required for allowing your clients and Task Workers to talk to LittleHorse Server."),(0,i.kt)("h2",{id:"creating-the-lhconfig"},"Creating the ",(0,i.kt)("inlineCode",{parentName:"h2"},"LHConfig")),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"You can create a config object in three ways (this is the same for ",(0,i.kt)("inlineCode",{parentName:"p"},"LHClientConfig")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"LHWorkerConfig"),"):"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"With no arguments, eg. ",(0,i.kt)("inlineCode",{parentName:"li"},"new LHClientConfig()"),". This loads all configurations from the environment variables."),(0,i.kt)("li",{parentName:"ol"},"Passing in a properties object, eg. ",(0,i.kt)("inlineCode",{parentName:"li"},"new LHClientConfig(properties)"),". This uses the configuration from the provided ",(0,i.kt)("inlineCode",{parentName:"li"},"Properties")," object."),(0,i.kt)("li",{parentName:"ol"},"Passing in a path to a properties file, eg. ",(0,i.kt)("inlineCode",{parentName:"li"},'new LHClientConfig("/opt/littlehorse.config")'),". This uses the configuration from the provided file.")),(0,i.kt)("p",null,"The java class can be found at:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"import io.littlehorse.sdk.common.config.LHConfig;\n"))),(0,i.kt)(l.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,i.kt)("p",null,"You can create a config object in two ways:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Using the environment variables as defaults, via ",(0,i.kt)("inlineCode",{parentName:"li"},"common.NewConfigFromEnv()"),"."),(0,i.kt)("li",{parentName:"ol"},"Passing in a path to a properties file, via ",(0,i.kt)("inlineCode",{parentName:"li"},'common.NewConfigFromProps("/opt/littlehorse.config")'),". This assumes that the file is in the format of a Java ",(0,i.kt)("inlineCode",{parentName:"li"},"Properties")," file.")),(0,i.kt)("p",null,"To import it, you can use the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/littlehorse-enterprises/littlehorse/sdk-go/common";\n'))),(0,i.kt)(l.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,i.kt)("p",null,"You can create a ",(0,i.kt)("inlineCode",{parentName:"p"},"LHConfig")," in Python as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from littlehorse.config import LHConfig\n\ndef get_config() -> LHConfig:\n    config = LHConfig()\n    config_path = Path.home().joinpath(".config", "littlehorse.config")\n    if config_path.exists():\n        config.load(config_path)\n    return config\n\nconfig: LHConfig = get_config()\n')),(0,i.kt)("p",null,"If you do not call ",(0,i.kt)("inlineCode",{parentName:"p"},"config.load(...)"),", then the configurations are loaded from the environment variables."))),(0,i.kt)("h2",{id:"client-config-options"},"Client Config Options"),(0,i.kt)("p",null,"All of our SDK's share common configuration options. They are listed below:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_API_HOST"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the host name that the client should use to connect to the LH Server. It is equivalent to ",(0,i.kt)("inlineCode",{parentName:"li"},"bootstrap.servers")," in Kafka; on LittleHorse Cloud this host always points to a Load Balancer."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_API_PORT"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the port that the client should connect to."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_CLIENT_ID"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the client ID. This should be unique for every client."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_CLIENT_KEY"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the path to the Client Private Key. Used for mTLS authentication."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_CLIENT_CERT"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the path to the Client Public Key (Certificate). Used for mTLS authentication."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_CA_CERT"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the path to the CA Certificate. Used for TLS."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_CLIENT_ID"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is the OAuth client ID. Used for OAuth authorization."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_CLIENT_SECRET"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optional OAuth2 Client Secret. Used by the Worker to identify itself at an Authorization Server. Client Credentials Flow."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_ACCESS_TOKEN_URL"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optional Access Token URL provided by the OAuth Authorization Server. Used by the Worker to obtain a token using client credentials flow. It is mandatory if ",(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_CLIENT_ID")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_CLIENT_SECRET")," are provided.")))),(0,i.kt)("p",null,"The following configurations are used for the Task Workers (in addition to the above configuration options for all):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHW_NUM_WORKER_THREADS"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The number of worker threads in the ",(0,i.kt)("inlineCode",{parentName:"li"},"Threadpool")," which executes Task Runs."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHW_TASK_WORKER_VERSION"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The version of this Task Worker. This is an optional config which is useful for keeping track of when you release new versions of your Task Workers."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHW_SERVER_CONNECT_LISTENER"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The name of the Listener to connect to on the LH Server. This defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"PLAIN"),".")))),(0,i.kt)("p",null,"The following is specific for ",(0,i.kt)("inlineCode",{parentName:"p"},"lhctl")," cli:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_SERVER_URL"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optional Authorization Server URL. Used by the client to obtain a token using OAuth 2 authorization code credentials flow. It is used by OIDC to discover the server endpoints. It is mandatory if ",(0,i.kt)("inlineCode",{parentName:"li"},"LHC_OAUTH_CLIENT_ID")," is provided.")))),(0,i.kt)("h2",{id:"configuring-the-cli"},"Configuring the CLI"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"lhctl")," looks for a configuration file at ",(0,i.kt)("inlineCode",{parentName:"p"},"${HOME}/.config/littlehorse.config"),". This configuration file tells ",(0,i.kt)("inlineCode",{parentName:"p"},"lhctl")," where and how to connect to the LittleHorse Servers. An example ",(0,i.kt)("inlineCode",{parentName:"p"},"littlehorse.config")," file looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-filename:",metastring:"${HOME}/.config/littlehorse.config","${HOME}/.config/littlehorse.config":!0},"LHC_API_HOST=localhost\nLHC_API_PORT=2023\n\nLHW_SERVER_CONNECT_LISTENER=PLAIN\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"LHC_API_HOST")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"LHC_API_PORT")," determine the endpoint that ",(0,i.kt)("inlineCode",{parentName:"p"},"lhctl")," connects to. The ",(0,i.kt)("inlineCode",{parentName:"p"},"LHW_SERVER_CONNECT_LISTENER")," is a config used by the Task Worker to tell the servers which listener to advertise to it. More details can be found in the configuration docs."),(0,i.kt)("p",null,"If you have properly installed ",(0,i.kt)("inlineCode",{parentName:"p"},"lhctl")," and configured it to point to a running LittleHorse Server, you should be able to run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'-> lhctl search wfSpec\n{\n  "results":  []\n}\n')),(0,i.kt)("h2",{id:"getting-a-grpc-client"},"Getting a GRPC Client"),(0,i.kt)("p",null,"In an effort to not reinvent the wheel, LittleHorse exposes a grpc API to its users. The ",(0,i.kt)("inlineCode",{parentName:"p"},"LHConfig")," allows you to get a grpc client."),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"You can get an async grpc stub as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"LHConfig config = new LHConfig();\nLittleHorseStub client = config.getAsyncStub();\n")),(0,i.kt)("p",null,"You can get a blocking grpc stub as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"LHConfig config = new LHConfig();\nLittleHorseBlockingStub client = config.getBlockingStub();\n"))),(0,i.kt)(l.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,i.kt)("p",null,"In Go, you can get a grpc client as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"config := common.NewConfigFromEnv()\nclient := config.getGrpcClient()\n")),(0,i.kt)("p",null,"Note that in grpc in Go, there is no distinction between async or blocking grpc clients.")),(0,i.kt)(l.Z,{value:"python",label:"Python",mdxType:"TabItem"},"In python, you can get a grpc client as follows:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"config = LHConfig()\nblocking_stub = config.stub(async_channel=False)\nasync_stub = config.stub(async_channel=True)\n")))))}m.isMDXComponent=!0}}]);