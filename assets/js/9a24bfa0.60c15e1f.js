"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[3701],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),u=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(a),h=r,m=c["".concat(d,".").concat(h)]||c[h]||p[h]||l;return a?n.createElement(m,o(o({ref:t},s),{},{components:a})):n.createElement(m,o({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>g});var n=a(7462),r=a(7294),l=a(6010),o=a(2466),i=a(6550),d=a(1980),u=a(7392),s=a(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,d._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=p(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[d,u]=m({queryString:a,groupId:n}),[c,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,s.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),b=(()=>{const e=d??c;return h({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),f(e)}),[u,f,l]),tabValues:l}}var b=a(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function T(e){let{className:t,block:a,selectedValue:i,selectValue:d,tabValues:u}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),p=e=>{const t=e.currentTarget,a=s.indexOf(t),n=u[a].value;n!==i&&(c(t),d(n))},h=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=s.indexOf(e.currentTarget)+1;t=s[a]??s[0];break}case"ArrowLeft":{const a=s.indexOf(e.currentTarget)-1;t=s[a]??s[s.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>s.push(e),onKeyDown:h,onClick:p},o,{className:(0,l.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=f(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",v.tabList)},r.createElement(T,(0,n.Z)({},e,t)),r.createElement(w,(0,n.Z)({},e,t)))}function g(e){const t=(0,b.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},203:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),l=a(4866),o=a(5162);const i={},d="Child Threads",u={unversionedId:"developer-guide/wfspec-development/child-threads",id:"developer-guide/wfspec-development/child-threads",title:"Child Threads",description:"You can use WorkflowThread#spawnThread() and WorkflowThread#waitForThreads() to launch and wait for Child ThreadRuns, respectively. This is useful if you want to execute multiple pieces of business logic in parallel.",source:"@site/docs/05-developer-guide/08-wfspec-development/07-child-threads.md",sourceDirName:"05-developer-guide/08-wfspec-development",slug:"/developer-guide/wfspec-development/child-threads",permalink:"/littlehorse/docs/developer-guide/wfspec-development/child-threads",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Exception Handling",permalink:"/littlehorse/docs/developer-guide/wfspec-development/exception-handling"},next:{title:"User Tasks",permalink:"/littlehorse/docs/developer-guide/wfspec-development/user-tasks"}},s={},c=[{value:"Spawning Child Threads",id:"spawning-child-threads",level:2},{value:"Waiting for Child Threads",id:"waiting-for-child-threads",level:2}],p={toc:c},h="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"child-threads"},"Child Threads"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"WorkflowThread#spawnThread()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"WorkflowThread#waitForThreads()")," to launch and wait for Child ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun"),"s, respectively. This is useful if you want to execute multiple pieces of business logic in parallel."),(0,r.kt)("h2",{id:"spawning-child-threads"},"Spawning Child Threads"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"WorkflowThread::spawnThread()")," method takes in three arguments:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"ThreadFunc")," (normally a lambda or function pointer) defining the logic for the Child ",(0,r.kt)("inlineCode",{parentName:"li"},"ThreadSpec"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"ThreadRun"),"."),(0,r.kt)("li",{parentName:"ol"},"The name to assign to the Child ",(0,r.kt)("inlineCode",{parentName:"li"},"ThreadSpec"),"."),(0,r.kt)("li",{parentName:"ol"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"Map<String, ?>")," for any input variables to the child thread (or equivalent, depending on the language of the SDK you use).")),(0,r.kt)("p",null,"Let's spawn a child thread whose ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadSpec")," we call ",(0,r.kt)("inlineCode",{parentName:"p"},"my-child-thread"),", and set the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"child-var")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),"."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SpawnedThread spawnedThread = thread.spawnThread(\n    child -> {\n        WfRunVariable childVar = child.addVariable("child-var", VariableType.STR);\n        child.execute("some-task", childVar);\n    },\n    "my-child-thread",\n    Map.of("child-var", "foo")\n);\n'))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'spawnedThread := thread.SpawnThread(\n    func (child *wflib.WorkflowThread) {\n        childVar := child.AddVariable("child-var", model.VariableType_STR);\n        child.Execute("some-task", childVar);\n    },\n    "my-child-thread",\n    map[string]interface{}{"child-var": "foo"},\n)\n'))),(0,r.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def my_thread_child(child: WorkflowThread) -> None:\n    child_var = child.add_variable("child-var", VariableType.STR)\n    child.execute("some-task", child_var)\n\nwf.spawn_thread(my_thread_child, "my-child-thread", {"child-var": "foo"})\n')))),(0,r.kt)("h2",{id:"waiting-for-child-threads"},"Waiting for Child Threads"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"WorkflowThread::waitForThreads()")," method takes in a variable number of args. Each arg is the ",(0,r.kt)("inlineCode",{parentName:"p"},"SpawnedThread")," object returned when you launch your Child ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," (see above)."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The return type is ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeOutput"),"; however, it should be noted that the ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeOutput")," should only be used to set a timeout or handle an exception; there is no content/payload/value associated with ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeOutput")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"WAIT_FOR_THREAD")," Nodes."),(0,r.kt)("p",{parentName:"admonition"},"Future releases of LittleHorse will allow a child ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," to return an output.")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SpawnedThread spawnedThread = thread.spawnThread(...);\nSpawnedThread anotherThread = thread.spawnThread(...);\n// Omitted: Execute some business logic in parallel\n\nNodeOutput waitedThreads = thread.waitForThreads(spawnedThread, anotherThread);\n\n// You can handle exceptions here\nthread.handleException(\n    waitedThread,\n    null, // catch any failure\n    handler -> {\n        handler.execute("some-error-reporting-task");\n    }\n);\n'))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'spawnedThread := ... // see above to spawn thread\nanotherThread := ... // see above to spawn thread\n\n// Omitted: Execute some business logic in parallel\n\nwaitedThreads := thread.WaitForThreads(spawnedThread, anotherThread)\n\nthread.HandleException(\n    waitedThreads,\n    nil, // handle any failure\n    func (handler *wflib.WorkflowThread) {\n        handler.execute("some-error-reporting-task")\n    },\n)\n'))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def my_handler(handle: WorkflowThread) -> None:\n    handle.execute("some-error-reporting-task")\n\noutput = wf.wait_for_threads(SpawnedThreads.from_list(...))\nwf.handle_exception(output, my_handler) # handle any failure\n')))))}m.isMDXComponent=!0}}]);