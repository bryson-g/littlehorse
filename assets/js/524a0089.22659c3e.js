"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[7095],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4267:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"External Events"},o="ExternalEventDef and ExternalEvent",l={unversionedId:"concepts/external-events",id:"concepts/external-events",title:"ExternalEventDef and ExternalEvent",description:"In LittleHorse, an ExternalEventDef is a Metadata Object that defines some event or activity occuring outside of the LittleHorse WfRun. An ExternalEvent is an Execution Object that represents the occurrence of such an event. Common use-cases for an External Event would be encapsulating a webhook from github when a new branch is pushed, or representing an event from DocuSign that is fired when a document is completed.",source:"@site/docs/04-concepts/04-external-events.md",sourceDirName:"04-concepts",slug:"/concepts/external-events",permalink:"/littlehorse/docs/concepts/external-events",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"External Events"},sidebar:"tutorialSidebar",previous:{title:"Tasks",permalink:"/littlehorse/docs/concepts/tasks"},next:{title:"User Tasks",permalink:"/littlehorse/docs/concepts/user-tasks"}},p={},s=[{value:"Motivation",id:"motivation",level:2},{value:"<code>ExternalEvent</code> Structure",id:"externalevent-structure",level:2},{value:"<code>ExternalEventDef</code> Structure",id:"externaleventdef-structure",level:2},{value:"<code>ExternalEvent</code> Nodes",id:"externalevent-nodes",level:2}],d={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"externaleventdef-and-externalevent"},(0,r.kt)("inlineCode",{parentName:"h1"},"ExternalEventDef")," and ",(0,r.kt)("inlineCode",{parentName:"h1"},"ExternalEvent")),(0,r.kt)("p",null,"In LittleHorse, an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," is a Metadata Object that defines some event or activity occuring outside of the LittleHorse ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun"),". An ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," is an Execution Object that represents the occurrence of such an event. Common use-cases for an External Event would be encapsulating a webhook from github when a new branch is pushed, or representing an event from DocuSign that is fired when a document is completed."),(0,r.kt)("p",null,"An External Event can be recorded through the ",(0,r.kt)("inlineCode",{parentName:"p"},"PutExternalEvent")," gRPC call. This can be accomplished using clients in any of our SDK's or through the use of ",(0,r.kt)("inlineCode",{parentName:"p"},"lhctl"),". Future versions of LittleHorse will allow you to directly hook up a webhook or event streaming system (eg Kafka) to LittleHorse and send events in a hands-off manner."),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"Workflow engines aim to help automate business processes. Oftentimes, such business processes involve interacting with the outside world and ",(0,r.kt)("em",{parentName:"p"},"listening")," for things to happen outside of the workflow engine before making a decision about what to do next. That is precisely what an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," is for: while a ",(0,r.kt)("inlineCode",{parentName:"p"},"TaskRun")," allows a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun")," to change the outside world, an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," allows a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun")," to react to the outside world. Some common use-cases are to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Integrate with asynchronous third-party API's."),(0,r.kt)("li",{parentName:"ul"},"Trigger ",(0,r.kt)("a",{parentName:"li",href:"/littlehorse/docs/concepts/interrupts"},"Interrupts"),"."),(0,r.kt)("li",{parentName:"ul"},"Wait for a person to sign a document in DocuSign."),(0,r.kt)("li",{parentName:"ul"},"Wait for a customer to respond to a text message using a callback from the Twilio API.")),(0,r.kt)("h2",{id:"externalevent-structure"},(0,r.kt)("inlineCode",{parentName:"h2"},"ExternalEvent")," Structure"),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," has a composite ID consisting of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"wfRunId")," of the associated ",(0,r.kt)("inlineCode",{parentName:"li"},"WfRun")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," of the ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalEventDef")),(0,r.kt)("li",{parentName:"ul"},"A ",(0,r.kt)("inlineCode",{parentName:"li"},"guid")," which is unique to the")),(0,r.kt)("p",null,"Why the ",(0,r.kt)("inlineCode",{parentName:"p"},"wfRunId"),"? An ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEven")," is intended to affect the behavior of a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun"),"; therefore, an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," must be correlated to a specific ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent"),"s have a payload which is simply a ",(0,r.kt)("inlineCode",{parentName:"p"},"VariableValue"),"."),(0,r.kt)("h2",{id:"externaleventdef-structure"},(0,r.kt)("inlineCode",{parentName:"h2"},"ExternalEventDef")," Structure"),(0,r.kt)("p",null,"There is an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," API Resource. The relationship between an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," and an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," is the same as the relationship between a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfSpec")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"WfRun"),"."),(0,r.kt)("p",null,"Currently, the only field in an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," is the name of the event type. The event name is used to isolate events of different types, for example ",(0,r.kt)("inlineCode",{parentName:"p"},'"document-signed"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},'"document-rejected"')," events."),(0,r.kt)("p",null,"In future versions of LittleHorse, the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEventDef")," will have more information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An optional schema for the data type to enable type checking in the ",(0,r.kt)("inlineCode",{parentName:"li"},"WfSpec"),"."),(0,r.kt)("li",{parentName:"ul"},"Information on how to correlate an ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalEvent")," to a ",(0,r.kt)("inlineCode",{parentName:"li"},"WfRun")," without explicitly setting the ",(0,r.kt)("inlineCode",{parentName:"li"},"wfRunId"),".")),(0,r.kt)("h2",{id:"externalevent-nodes"},(0,r.kt)("inlineCode",{parentName:"h2"},"ExternalEvent")," Nodes"),(0,r.kt)("p",null,"One use for an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," is the ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL_EVENT")," Node Type. When a ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," reaches an ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL_EVENT")," node, it will halt until an ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," of the specified type (and with the correct ",(0,r.kt)("inlineCode",{parentName:"p"},"wfRunId"),") arrives. The output of the ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeRun")," is simply the payload of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent"),"."),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL_EVENT")," node can have a timeout configured; this means that if the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," does arrive within X seconds after the ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," arrives at the node, then the NodeRun will fail with a ",(0,r.kt)("inlineCode",{parentName:"p"},"TIMEOUT")," exception."),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," arrives before the ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," reaches the ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL_EVENT")," Node, that's ok! The ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun")," will immediately pick up the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," and move on to the next ",(0,r.kt)("inlineCode",{parentName:"p"},"Node"),"."),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," gets correlated to one and only one ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeRun"),". When posting an event, you can optionally specify a ",(0,r.kt)("inlineCode",{parentName:"p"},"threadRunNumber")," to ensure that the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," can only be assigned to a ",(0,r.kt)("inlineCode",{parentName:"p"},"NodeRun")," on that specific ",(0,r.kt)("inlineCode",{parentName:"p"},"ThreadRun"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"An ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," can also be used to trigger an Interrupt in LittleHorse. For more information, see the ",(0,r.kt)("a",{parentName:"p",href:"/littlehorse/docs/concepts/interrupts"},"Interrupt documentation"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you configure an ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL_EVENT")," node with the ExternalEventDef ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),", you cannot use the ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," external event def as an Interrupt Trigger elsewhere in the same ",(0,r.kt)("inlineCode",{parentName:"p"},"WfSpec"),".")))}c.isMDXComponent=!0}}]);