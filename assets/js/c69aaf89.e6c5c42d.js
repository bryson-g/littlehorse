"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[3361],{9686:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=n(4848),a=n(8453),i=n(1470),t=n(9365);const l={},o="Handling User Tasks",c={id:"developer-guide/grpc/user-tasks",title:"Handling User Tasks",description:"User Tasks enable a ThreadRun to block until a human user provides some input into the workflow. Additionally, User Tasks have several useful hooks such as automatic reassignment, reminders, and auditing capabilities.",source:"@site/docs/05-developer-guide/09-grpc/20-user-tasks.md",sourceDirName:"05-developer-guide/09-grpc",slug:"/developer-guide/grpc/user-tasks",permalink:"/docs/developer-guide/grpc/user-tasks",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Posting ExternalEvents",permalink:"/docs/developer-guide/grpc/posting-external-events"},next:{title:"Operations",permalink:"/docs/operations/"}},d={},u=[{value:"<code>UserTaskRun</code> Lifecycle",id:"usertaskrun-lifecycle",level:2},{value:"Search for <code>UserTaskRun</code>s",id:"search-for-usertaskruns",level:2},{value:"Display a <code>UserTaskRun</code>",id:"display-a-usertaskrun",level:2},{value:"Complete a <code>UserTaskRun</code>",id:"complete-a-usertaskrun",level:2},{value:"Re-Assign a <code>UserTaskRun</code>",id:"re-assign-a-usertaskrun",level:2},{value:"Cancel a <code>UserTaskRun</code>",id:"cancel-a-usertaskrun",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"handling-user-tasks",children:"Handling User Tasks"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs/concepts/user-tasks",children:"User Tasks"})," enable a ",(0,r.jsx)(s.code,{children:"ThreadRun"})," to block until a human user provides some input into the workflow. Additionally, User Tasks have several useful hooks such as automatic reassignment, reminders, and auditing capabilities."]}),"\n",(0,r.jsxs)(s.p,{children:["This page shows you how to interact with a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," on an already-running ",(0,r.jsx)(s.code,{children:"WfRun"}),"."]}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["For documentation about how to insert a ",(0,r.jsx)(s.code,{children:"USER_TASK"})," node into your ",(0,r.jsx)(s.code,{children:"WfSpec"}),", please refer to the ",(0,r.jsxs)(s.a,{href:"/docs/developer-guide/wfspec-development/user-tasks",children:[(0,r.jsx)(s.code,{children:"WfSpec"})," development documentation"]}),"."]})}),"\n",(0,r.jsx)(s.p,{children:"Note that LittleHorse does not provide an out-of-the-box implementation of a User Task Manager application. This is because it would likely be of limited use to our users, because the implementation of User Task Applications is highly use-case specific. For example, each of the following considerations might be handled vastly differently depending on the application:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Presentation:"})," is the user task form presented in a mobile app, standalone internal web application, or embedded into a customer-facing site?"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Identity Management:"})," what system is used to manage and determine the identity of the person executing User Tasks?"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Look and Feel:"})," what is the style of the actual page?"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Access Permisions:"})," while the ",(0,r.jsx)(s.code,{children:"userGroup"})," field of a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is useful for determining who may execute a ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", how should the Task Manager application determine who can perform additional acctions, such as reassignment and viewing audit information?"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"While those considerations are left to the user of LittleHorse, User Tasks still provide an incredibly valuable tool to our users, specifically:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Direct integrations with the ",(0,r.jsx)(s.code,{children:"WfSpec"})]}),"\n",(0,r.jsx)(s.li,{children:"Built-in reassignment and reminder capabilities"}),"\n",(0,r.jsx)(s.li,{children:"Built-in search capabilities."}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"This documentation explains everything you need in order to build your own application-specific User Tasks integration."}),"\n",(0,r.jsxs)(s.h2,{id:"usertaskrun-lifecycle",children:[(0,r.jsx)(s.code,{children:"UserTaskRun"})," Lifecycle"]}),"\n",(0,r.jsxs)(s.p,{children:["In order to use User Tasks, you must first create a ",(0,r.jsx)(s.code,{children:"WfSpec"})," that has a ",(0,r.jsx)(s.code,{children:"USER_TASK"})," node in it, for example by using the ",(0,r.jsx)(s.code,{children:"WorkflowThread#assignUserTask()"})," method (see our ",(0,r.jsxs)(s.a,{href:"/docs/developer-guide/wfspec-development/user-tasks",children:[(0,r.jsx)(s.code,{children:"WfSpec"})," Development Docs"]}),")."]}),"\n",(0,r.jsxs)(s.p,{children:["When a ",(0,r.jsx)(s.code,{children:"ThreadRun"})," arrives at such a ",(0,r.jsx)(s.code,{children:"Node"}),", then a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," object is created in the LittleHorse Data Store. The ",(0,r.jsx)(s.code,{children:"ThreadRun"}),' will "block" at that ',(0,r.jsx)(s.code,{children:"Node"})," until the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is either completed or cancelled. When the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is completed, the ",(0,r.jsx)(s.code,{children:"NodeRun"})," returns an output which is a ",(0,r.jsx)(s.code,{children:"JSON_OBJ"})," containing a key-value pair for every field in the ",(0,r.jsx)(s.code,{children:"UserTaskDef"})," (in plain English, this is just one key-value for each field in the User Task form). When the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is cancelled, an ",(0,r.jsx)(s.code,{children:"EXCEPTION"})," is propagated to the ",(0,r.jsx)(s.code,{children:"ThreadRun"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["The only way to Complete a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is via the ",(0,r.jsx)(s.code,{children:"rpc CompleteUserTaskRun"})," endpoint on the LH Server. A ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," may be cancelled either by the ",(0,r.jsx)(s.code,{children:"rpc CancelUserTaskRun"})," or by lifecycle hooks built-in to the ",(0,r.jsx)(s.code,{children:"WfSpec"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," may be in one of the four statuses below:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"UNASSIGNED"}),": the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," does not have a specific ",(0,r.jsx)(s.code,{children:"user_id"})," set. In this case, ",(0,r.jsx)(s.code,{children:"user_group"})," must be set."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"ASSIGNED"}),": the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," has a specific ",(0,r.jsx)(s.code,{children:"user_id"})," set, and may have a ",(0,r.jsx)(s.code,{children:"user_group"})," set as well."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"DONE"}),": the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," has been completed."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"CANCELLED"}),": the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," has been cancelled either by a manual ",(0,r.jsx)(s.code,{children:"rpc CancelUserTaskRun"})," or by a built-in User Task lifecycle hook."]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"search-for-usertaskruns",children:["Search for ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"s"]}),"\n",(0,r.jsxs)(s.p,{children:["Before you can do anything useful with User Tasks, you need to be able to search for a list of ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s matching certain criteria. The endpoint ",(0,r.jsx)(s.code,{children:"rpc SearchUserTaskRun"})," allows you to do this."]}),"\n",(0,r.jsx)(s.p,{children:"The endpoint definition is provided below:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-protobuf",children:"service LittleHorse {\n  rpc SearchUserTaskRun(SearchUserTaskRunRequest) returns (UserTaskRunIdList) {}\n}\n\nmessage SearchUserTaskRunRequest {\n  optional bytes bookmark = 1;\n  optional int32 limit = 2;\n\n  optional UserTaskRunStatus status = 3;\n  optional string user_task_def_name = 4;\n\n  optional string user_id = 5;\n  optional string user_group = 6;\n\n  optional google.protobuf.Timestamp earliest_start = 7;\n  optional google.protobuf.Timestamp latest_start = 8;\n}\n\nmessage UserTaskRunIdList {\n  repeated UserTaskRunId results = 1;\n  optional bytes bookmark = 2;\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Note that there are six filters that can be provided:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"status"}),": an enum of either ",(0,r.jsx)(s.code,{children:"DONE"}),", ",(0,r.jsx)(s.code,{children:"UNASSIGNED"}),", ",(0,r.jsx)(s.code,{children:"ASSIGNED"}),", or ",(0,r.jsx)(s.code,{children:"CANCELLED"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user_task_def_name"}),": the name of the associated ",(0,r.jsx)(s.code,{children:"UserTaskDef"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user_id"}),": Only returns ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s assigned to a specific user."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user_group"}),": only returns ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s assigned to a group."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"earliest_start"}),": only returns ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s created after this date."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"latest_start"}),": only returns ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s created before this date."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["All fields are additive; meaning that you can specify any combination of the fields, and only ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s matching ",(0,r.jsx)(s.em,{children:"all"})," of the criteria will be"]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"user_id"})," and ",(0,r.jsx)(s.code,{children:"user_group"})," fields are ",(0,r.jsx)(s.em,{children:"not"})," managed by LittleHorse. Rather, they are intended to allow the user of LittleHorse to pass values managed by an external identity provider. This allows User Tasks to support a wide array of identity management systems."]})}),"\n",(0,r.jsxs)(s.p,{children:["See below for an example of searching for ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s with the following criteria:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Assigned to the ",(0,r.jsx)(s.code,{children:"jedi-council"})," group, and specifically executed by ",(0,r.jsx)(s.code,{children:"Obi-Wan"})]}),"\n",(0,r.jsx)(s.li,{children:"Created in the past week"}),"\n",(0,r.jsxs)(s.li,{children:["Already in the ",(0,r.jsx)(s.code,{children:"DONE"})," status"]}),"\n",(0,r.jsxs)(s.li,{children:["Of the type ",(0,r.jsx)(s.code,{children:"approve-funds-for-mission"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(t.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:'LittleHorseBlockingStub client = ...;\n\nTimestamp oneWeekAgo = Timestamp.newBuilder()\n        .setSeconds(Instant.now().minus(7, ChronoUnit.DAYS).getEpochSecond())\n        .build();\n\n// You can omit certain search criteria here if desired.\nSearchUserTaskRunRequest req = SearchUserTaskRunRequest.newBuilder()\n        .setUserId("obi-wan")\n        .setUserGroup("jedi-council")\n        .setUserTaskDefName("approve-funds-for-mission")\n        .setStatus(UserTaskStatus.DONE)\n        .setEarliestCreateTime(oneWeekAgo)\n        .build();\n\nUserTaskRunIdList results = client.searchUserTaskRun(req);\n'})})}),(0,r.jsx)(t.A,{value:"go",label:"Go",children:(0,r.jsx)(s.p,{children:"Go example coming soon. However, it should be highly similar to the Java example above."})}),(0,r.jsx)(t.A,{value:"python",label:"Python",children:(0,r.jsx)(s.p,{children:"Python example coming soon. However, it should be highly similar to the Java example above."})})]}),"\n",(0,r.jsxs)(s.h2,{id:"display-a-usertaskrun",children:["Display a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})]}),"\n",(0,r.jsxs)(s.p,{children:["Now that you've found some relevant ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"'s that you want to display in your application, how do you show them? This is particularly important to understand when building a generic User Task Manager."]}),"\n",(0,r.jsxs)(s.p,{children:["First, the ",(0,r.jsx)(s.code,{children:"rpc GetUserTaskRun"})," request can be used to get the details for of a ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),". To use this request, you need a ",(0,r.jsx)(s.code,{children:"UserTaskRunId"})," (see the note on searching above!)."]}),"\n",(0,r.jsxs)(s.p,{children:["Once you have the ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", you can inspect the results (if it's already completed). If you are trying to develop a frontend to execute the ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", you can iterate through the ",(0,r.jsx)(s.code,{children:"fields"})," of the ",(0,r.jsx)(s.code,{children:"UserTaskDef"})," and determine what fields are to be displayed."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(t.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:'LittleHorseBlockingStub client = ...;\nUserTaskRunId id = ...; // For example, via searching as above\n\nUserTaskRun userTaskRun = client.getUserTaskRun(id);\n\n// See current owners\nString currentUserId = userTaskRun.hasUserId() ? userTaskRun.getUserId() : null;\nString currentUserGroup = userTaskRun.hasUserGroup() ? userTaskRun.getUserGroup() : null;\n\n// See results. If the userTaskRun is not completed, the map will be empty.\n// Otherwise, there will be a result for every required field.\nMap<String, VariableValue> results = userTaskRun.getResultsMap();\n\n// See the fields on the UserTaskDef. This is useful for front-end\'s which need\n// to dynamically display forms that accept the input.\nUserTaskDefId userTaskDefId = userTaskRun.getUserTaskDefId();\nUserTaskDef userTaskDef = client.getUserTaskDef(userTaskDefId);\nfor (UserTaskField field : userTaskDef.getFieldsList()) {\n    System.out.println("Field %s has type %s".formatted(field.getName(), field.getType()));\n}\n'})})}),(0,r.jsx)(t.A,{value:"go",label:"Go",children:(0,r.jsx)(s.p,{children:"Go example coming soon. However, it should be highly similar to the Java example above."})}),(0,r.jsx)(t.A,{value:"python",label:"Python",children:(0,r.jsx)(s.p,{children:"Python example coming soon. However, it should be highly similar to the Java example above."})})]}),"\n",(0,r.jsxs)(s.h2,{id:"complete-a-usertaskrun",children:["Complete a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})]}),"\n",(0,r.jsxs)(s.p,{children:["To complete a ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", you can use the ",(0,r.jsx)(s.code,{children:"rpc CompleteUserTaskRun"}),". The protobuf for the call is as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"rpc CompleteUserTaskRun(CompleteUserTaskRunRequest) returns (google.protobuf.Empty) {}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"CompleteUserTaskRunRequest"})," message is defined as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-protobuf",children:"message CompleteUserTaskRunRequest {\n  UserTaskRunId user_task_run_id = 1;\n  map<string, VariableValue> results = 2;\n  string user_id = 3;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The first field is the ",(0,r.jsx)(s.code,{children:"UserTaskRunId"})," of the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," which you intend to complete. The second is a map where each key is the name of a ",(0,r.jsx)(s.code,{children:"field"})," in the ",(0,r.jsx)(s.code,{children:"UserTaskDef"}),", and the value is a ",(0,r.jsx)(s.code,{children:"VariableValue"})," representing the value of that User Task Field. The ",(0,r.jsx)(s.code,{children:"user_id"})," field must be set and is the ",(0,r.jsx)(s.code,{children:"user_id"})," of the person completing the ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["The current behavior of the ",(0,r.jsx)(s.code,{children:"user_id"})," field is that, if it differs from the current owner of the ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", then the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," will be re-assigned to the new ",(0,r.jsx)(s.code,{children:"user_id"}),". We have an ",(0,r.jsx)(s.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/issues/617",children:"open ticket"})," to make this behavior configurable. If this is an important feature for you, please comment on the ticket! We're happy to bump its priority; alternatively, we do accept Pull Requests ","\ud83d\ude04","."]}),"\n",(0,r.jsxs)(s.p,{children:["In the examples below, the user ",(0,r.jsx)(s.code,{children:"alice"})," will complete a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," that has two fields: a ",(0,r.jsx)(s.code,{children:"STR"})," field called ",(0,r.jsx)(s.code,{children:"model"})," set to ",(0,r.jsx)(s.code,{children:'"explorer"'}),", and a ",(0,r.jsx)(s.code,{children:"INT"})," field called ",(0,r.jsx)(s.code,{children:"year"})," set to ",(0,r.jsx)(s.code,{children:"2022"}),"."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(t.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:'LittleHorseBlockingStub client = ...;\nUserTaskRunId id = ...; // For example, via searching as above\n\nclient.completeUserTaskRun(CompleteUserTaskRunRequest.newBuilder()\n        .setUserId("alice")\n        .putResults("model", LHLibUtil.objToVarVal("explorer"))\n        .putResults("year", LHLibUtil.objToVarVal(2022))\n        .setUserTaskRunId(id)\n        .build());\n'})})}),(0,r.jsx)(t.A,{value:"go",label:"Go",children:(0,r.jsx)(s.p,{children:"Go example coming soon. However, it should be highly similar to the Java example above."})}),(0,r.jsx)(t.A,{value:"python",label:"Python",children:(0,r.jsx)(s.p,{children:"Python example coming soon. However, it should be highly similar to the Java example above."})})]}),"\n",(0,r.jsxs)(s.h2,{id:"re-assign-a-usertaskrun",children:["Re-Assign a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})]}),"\n",(0,r.jsxs)(s.p,{children:["When building a task manager application, you may wish to have an administrative panel in which an admin may assign or re-assign tasks to various people. To re-assign a ",(0,r.jsx)(s.code,{children:"UserTaskRun"}),", you can use the request ",(0,r.jsx)(s.code,{children:"rpc AssignUserTaskRun"}),". The request proto is as follows:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-protobuf",children:"message AssignUserTaskRunRequest {\n  UserTaskRunId user_task_run_id = 1;\n\n  bool override_claim = 2;\n\n  optional string user_group = 3;\n  optional string user_id = 4;\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If the ",(0,r.jsx)(s.code,{children:"override_claim"})," field is set to ",(0,r.jsx)(s.code,{children:"false"})," and the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is already assigned to a specific ",(0,r.jsx)(s.code,{children:"user_id"}),", then the request will fail with ",(0,r.jsx)(s.code,{children:"FAILED_PRECONDITION"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["It is important to note that the request will ",(0,r.jsx)(s.em,{children:"overwrite"})," both the ",(0,r.jsx)(s.code,{children:"user_id"})," ",(0,r.jsx)(s.em,{children:"and"})," the ",(0,r.jsx)(s.code,{children:"user_group"})," with the provided values from this request. If the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is currently assigned to ",(0,r.jsx)(s.code,{children:"user_group == 'sales'"})," and ",(0,r.jsx)(s.code,{children:"user_id == null"}),", and a client makes the following request:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'{\n    user_task_run_id: ...,\n    override_claim: false,\n    user_group: null,\n    user_id: "sarah"\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," will be assigned to ",(0,r.jsx)(s.code,{children:'user_id: "sarah"'})," and ",(0,r.jsx)(s.code,{children:"user_group: null"}),". An example request is shown below."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(t.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:'LittleHorseBlockingStub client = ...;\nUserTaskRunId id = ...; // For example, via searching as above\n\nclient.assignUserTaskRun(AssignUserTaskRunRequest.newBuilder()\n        .setUserId("bob")\n        .setUserGroup("sales")\n        .setUserTaskRunId(id)\n        .setOverrideClaim(true)\n        .build());\n'})})}),(0,r.jsx)(t.A,{value:"go",label:"Go",children:(0,r.jsx)(s.p,{children:"Go example coming soon. However, it should be highly similar to the Java example above."})}),(0,r.jsx)(t.A,{value:"python",label:"Python",children:(0,r.jsx)(s.p,{children:"Python example coming soon. However, it should be highly similar to the Java example above."})})]}),"\n",(0,r.jsxs)(s.h2,{id:"cancel-a-usertaskrun",children:["Cancel a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})]}),"\n",(0,r.jsxs)(s.p,{children:['The last useful operation you may need to do when building an application using User Tasks is to "cancel" a ',(0,r.jsx)(s.code,{children:"UserTaskRun"}),"."]}),"\n",(0,r.jsxs)(s.admonition,{type:"warning",children:[(0,r.jsxs)(s.p,{children:["Currently, when a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is moved to the ",(0,r.jsx)(s.code,{children:"CANCELLED"})," state, the ",(0,r.jsx)(s.code,{children:"NodeRun"})," treats it as an ",(0,r.jsx)(s.code,{children:"ERROR"})," condition. However, we have an ",(0,r.jsx)(s.a,{href:"https://github.com/littlehorse-enterprises/littlehorse/issues/599",children:"open ticket"})," to change this behavior to throw a business ",(0,r.jsx)(s.code,{children:"EXCEPTION"})," rather than a technical ",(0,r.jsx)(s.code,{children:"ERROR"}),". This is because the cancellation of a ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is a business process-level failure, not a technical failure."]}),(0,r.jsxs)(s.p,{children:["We anticipate implementing that ticket before releasing ",(0,r.jsx)(s.code,{children:"1.0.0"}),"."]})]}),"\n",(0,r.jsxs)(s.p,{children:["The request ",(0,r.jsx)(s.code,{children:"rpc CancelUserTaskRun"})," is quite simple. The only edge-case is that the request throws ",(0,r.jsx)(s.code,{children:"FAILED_PRECONDITION"})," if the ",(0,r.jsx)(s.code,{children:"UserTaskRun"})," is already in the ",(0,r.jsx)(s.code,{children:"DONE"})," status."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-protobuf",children:"message CancelUserTaskRunRequest {\n  UserTaskRunId user_task_run_id = 1;\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"A simple example is shown below:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(t.A,{value:"java",label:"Java",default:!0,children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:"LittleHorseBlockingStub client = ...;\nUserTaskRunId id = ...; // For example, via searching as above\n\nclient.cancelUserTaskRun(CancelUserTaskRunRequest.newBuilder()\n        .setUserTaskRunId(id)\n        .build());\n"})})}),(0,r.jsx)(t.A,{value:"go",label:"Go",children:(0,r.jsx)(s.p,{children:"Go example coming soon. However, it should be highly similar to the Java example above."})}),(0,r.jsx)(t.A,{value:"python",label:"Python",children:(0,r.jsx)(s.p,{children:"Python example coming soon. However, it should be highly similar to the Java example above."})})]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9365:(e,s,n)=>{n.d(s,{A:()=>t});n(6540);var r=n(8215);const a={tabItem:"tabItem_Ymn6"};var i=n(4848);function t(e){let{children:s,hidden:n,className:t}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:s})}},1470:(e,s,n)=>{n.d(s,{A:()=>v});var r=n(6540),a=n(8215),i=n(3104),t=n(6347),l=n(205),o=n(7485),c=n(1682),d=n(9466);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:s,children:n}=e;return(0,r.useMemo)((()=>{const e=s??function(e){return u(e).map((e=>{let{props:{value:s,label:n,attributes:r,default:a}}=e;return{value:s,label:n,attributes:r,default:a}}))}(n);return function(e){const s=(0,c.X)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,n])}function p(e){let{value:s,tabValues:n}=e;return n.some((e=>e.value===s))}function x(e){let{queryString:s=!1,groupId:n}=e;const a=(0,t.W6)(),i=function(e){let{queryString:s=!1,groupId:n}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:s,groupId:n});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const s=new URLSearchParams(a.location.search);s.set(i,e),a.replace({...a.location,search:s.toString()})}),[i,a])]}function j(e){const{defaultValue:s,queryString:n=!1,groupId:a}=e,i=h(e),[t,o]=(0,r.useState)((()=>function(e){let{defaultValue:s,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:i}))),[c,u]=x({queryString:n,groupId:a}),[j,m]=function(e){let{groupId:s}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(s),[a,i]=(0,d.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),f=(()=>{const e=c??j;return p({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:t,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(4848);function k(e){let{className:s,block:n,selectedValue:r,selectValue:t,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const s=e.currentTarget,n=o.indexOf(s),a=l[n].value;a!==r&&(c(s),t(a))},u=e=>{let s=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;s=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;s=o[n]??o[o.length-1];break}}s?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},s),children:l.map((e=>{let{value:s,label:n,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===s?0:-1,"aria-selected":r===s,ref:e=>o.push(e),onKeyDown:u,onClick:d,...i,className:(0,a.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":r===s}),children:n??s},s)}))})}function b(e){let{lazy:s,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(s){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,s)=>(0,r.cloneElement)(e,{key:s,hidden:e.props.value!==a})))})}function T(e){const s=j(e);return(0,g.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,g.jsx)(k,{...s,...e}),(0,g.jsx)(b,{...s,...e})]})}function v(e){const s=(0,m.A)();return(0,g.jsx)(T,{...e,children:u(e.children)},String(s))}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var r=n(6540);const a={},i=r.createContext(a);function t(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);