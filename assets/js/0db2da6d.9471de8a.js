"use strict";(self.webpackChunklh_site=self.webpackChunklh_site||[]).push([[2365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=h;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Interrupts"},l="Interrupts",o={unversionedId:"concepts/interrupts",id:"concepts/interrupts",title:"Interrupts",description:"In C and C++, you can register a handler function to handle an OS signal: when the signal is caught, the program gets interrupted and the interrupt handler is executed.",source:"@site/docs/04-concepts/11-interrupts.md",sourceDirName:"04-concepts",slug:"/concepts/interrupts",permalink:"/littlehorse/docs/concepts/interrupts",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_label:"Interrupts"},sidebar:"tutorialSidebar",previous:{title:"Exception Handling",permalink:"/littlehorse/docs/concepts/exception-handling"},next:{title:"Sleeping",permalink:"/littlehorse/docs/concepts/sleeping"}},p={},s=[{value:"Behavior",id:"behavior",level:2},{value:"<code>ExternalEvent</code> Payload",id:"externalevent-payload",level:2},{value:"Scoping",id:"scoping",level:2},{value:"Use Cases",id:"use-cases",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interrupts"},"Interrupts"),(0,a.kt)("p",null,"In C and C++, you can register a handler function to handle an OS signal: when the signal is caught, the program gets interrupted and the interrupt handler is executed."),(0,a.kt)("p",null,"In LittleHorse, you can handle an ",(0,a.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," and trigger an Interrupt ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun"),"."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("p",null,"When an ",(0,a.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," is posted to a ",(0,a.kt)("inlineCode",{parentName:"p"},"WfRun"),", and a ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," has registered an Interrupt for that specific ",(0,a.kt)("inlineCode",{parentName:"p"},"ExternalEventDef"),", then the affected ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is halted. Once the ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is halted, then a new Child ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," (specifically, an Interrupt Handler) is created."),(0,a.kt)("p",null,"Once the Interrupt Handler (Child) completes, the Interrupted Thread (Parent) is resumed. If the Interrupt Handler fails, then the Parent also fails with a ",(0,a.kt)("inlineCode",{parentName:"p"},"CHILD_FAILED")," exception. This error is unrecoverable."),(0,a.kt)("h2",{id:"externalevent-payload"},(0,a.kt)("inlineCode",{parentName:"h2"},"ExternalEvent")," Payload"),(0,a.kt)("p",null,"Recall that an ",(0,a.kt)("inlineCode",{parentName:"p"},"ExternalEvent")," has a payload, which is a ",(0,a.kt)("inlineCode",{parentName:"p"},"VariableValue"),". The Interrupt Handler thread can access that value through the ",(0,a.kt)("inlineCode",{parentName:"p"},'"INPUT"')," ",(0,a.kt)("inlineCode",{parentName:"p"},"Variable"),". Recall from the ",(0,a.kt)("a",{parentName:"p",href:"/littlehorse/docs/concepts/exception-handling"},"Exception Handler Docs")," that ",(0,a.kt)("inlineCode",{parentName:"p"},'"INPUT"')," is a reserved ",(0,a.kt)("inlineCode",{parentName:"p"},"Variable")," name used for the same purpose."),(0,a.kt)("h2",{id:"scoping"},"Scoping"),(0,a.kt)("p",null,"Interrupts are registerd at the ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadSpec")," level. Only one ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadSpec")," may register an Interrupt for a specific ",(0,a.kt)("inlineCode",{parentName:"p"},"ExternalEventDef"),"."),(0,a.kt)("p",null,"When a ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is Interrupted, it must first halt. As per the ",(0,a.kt)("a",{parentName:"p",href:"/littlehorse/docs/concepts/workflows#lifecycle"},"WfRun Documentation"),", a ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," is not considered ",(0,a.kt)("inlineCode",{parentName:"p"},"HALTED")," until all of its Children are ",(0,a.kt)("inlineCode",{parentName:"p"},"HALTED")," as well. Therefore, interrupting a ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," causes all of the Children of the Interrupted ",(0,a.kt)("inlineCode",{parentName:"p"},"ThreadRun")," to halt as well."),(0,a.kt)("p",null,"The Interrupt Handler is a Child of the Interrupted Thread. Therefore, it has read/write access to all of the Interrupted Thread's ",(0,a.kt)("inlineCode",{parentName:"p"},"Variable"),"s."),(0,a.kt)("h2",{id:"use-cases"},"Use Cases"),(0,a.kt)("p",null,"Interrupts may be used for various reasons, such as to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Kill a running ",(0,a.kt)("inlineCode",{parentName:"li"},"WfRun")," and perform some cleanup action (such as notifying a customer) before making the Interrupted Thread fail."),(0,a.kt)("li",{parentName:"ul"},"Update the value of some ",(0,a.kt)("inlineCode",{parentName:"li"},"Variable")," in a running ",(0,a.kt)("inlineCode",{parentName:"li"},"WfRun"),", such as to change contact info or add items to a shopping cart."),(0,a.kt)("li",{parentName:"ul"},"Send heartbeats from an external system and allow the ",(0,a.kt)("inlineCode",{parentName:"li"},"WfRun")," to keep track of the last seen activity (such as when determining when to invalidate an access token due to inactivity).")))}u.isMDXComponent=!0}}]);